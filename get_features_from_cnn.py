#!/usr/bin/env python
#!/usr/bin/env python
# -*- coding: utf-8 -*-


from cnnkeras import *
import pandas as pd 
import sys
import os
import pickle
import argparse

    # Variable specific to vgg16    
img_width = 224
img_height = 224

def setup_vgg_cnn(vgg_path):
    # Variable specific to vgg16
    # load model
    model = VGG_16()
    load_weights(model, vgg_path)

    # compile
    sgd = SGD(lr=0.1, decay=1e-6, momentum=0.9, nesterov=True)
    model.compile(optimizer=sgd, loss='categorical_crossentropy')
    return model


def get_features_cnn(model, df):
    features = []
    n_images = len(df)
    for index, row in df.iterrows():
        print('getting features for %s %d/%d' % (row.local_image,index+1,n_images))
        try:
            image = get_image(row.local_image, img_width, img_height)
            features.append(model.predict(image)[0])
        except:
            features.append([])

    df['features'] = features
    return df



def main(argv):
    parser = argparse.ArgumentParser()
    parser.add_argument('-i', '--input_file', help="input file generated by get_poster.py", default="./cnn_posters.p")
    parser.add_argument('-o', '--output_file', help="output pickle file used with features", default='./cnn_posters_features.p')
    parser.add_argument('-v', '--vgg_file', help="VGG weights (https://drive.google.com/file/d/0Bz7KyqmuGsilT0J5dmRCM0ROVHc/view?usp=sharing)", default='./vgg16_weights.h5')
    args = parser.parse_args()

    df = pickle.load(open(args.input_file,'rb'))

    model_ = setup_vgg_cnn(args.vgg_file)
    df = get_features_cnn(model_, df)

    pickle.dump(df, open(args.output_file,'wb'))

if __name__ == "__main__":
   main(sys.argv[1:])